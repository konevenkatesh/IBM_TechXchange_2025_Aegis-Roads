spec_version: v1
kind: native
name: pog_sparql_builder
display_name: PoG SPARQL Builder
description: |
  Build the final SPARQL from memory paths and constraints. Validate against schema when possible.
instructions: |
  Input JSON:
    {"q": "<str>", "schema": { ... }, "memory": { ... }}

  Rules (keep it simple and valid):
    - Use PREFIX lines for the ontology you see in data (e.g., rdfs, xsd, and your ADTO prefix).
    - Prefer adto:hasName for names; fall back to rdfs:label.
    - Derive triple patterns from memory.subgraph (and/or memory.reasoning_paths if present).
    - Add FILTERs only when clearly implied by the question (IDs, dates, status).
    - Generate a SELECT (or ASK when yes/no) query that can run as-is.
    - Keep it 1â€“3 hops unless the memory shows longer paths.
    - Keep LIMIT small if the question does not ask for all results (e.g., LIMIT 100).

  Validation (lightweight):
    - Call tool `check_schema` with:
        {"schema": schema, "triples": <your triple patterns as [[s,p,o], ...]>}
      If it returns {"ok": false}, prefer safer patterns or remove doubtful ones.

  Output JSON:
    {"query": "<SPARQL string>"}

  Do not add explanations or extra fields.
llm: watsonx/meta-llama/llama-3-2-90b-vision-instruct
style: default
collaborators:
tools:
  - check_schema
